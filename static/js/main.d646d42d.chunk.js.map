{"version":3,"sources":["components/ScoreboardPage/styles.module.css","consts/routes.ts","components/Header/Header.tsx","components/Header/index.ts","components/Toast/index.ts","components/Toast/Toast.tsx","components/Error/index.ts","components/Error/Error.tsx","components/Landing/LandingPage/index.ts","components/Landing/LandingPage/LandingPage.tsx","components/RulesPage/index.ts","components/RulesPage/RulesPage.tsx","consts/emptyTeam.ts","components/TeamForm/TeamForm.tsx","components/TeamForm/index.ts","components/RegistrationPage/index.ts","components/RegistrationPage/RegistrationPage.tsx","utils/sendRequest.ts","consts/api.ts","actions/app.ts","consts/actions.ts","utils/createFormData.ts","utils/createQueryString.ts","actions/team.ts","utils/createEmptyAction.ts","containers/Registration.ts","consts/strings.ts","components/LoginPage/index.ts","components/LoginPage/LoginPage.tsx","containers/Login.ts","components/ShowAndCopyForm/index.ts","components/ShowAndCopyForm/ShowAndCopyForm.tsx","components/TeamInfoPage/index.ts","models/Submission.ts","components/TeamInfoPage/TeamInfoPage.tsx","containers/TeamInfo.ts","components/DateTime/DateTime.tsx","components/DateTime/index.ts","models/BuildSystemRegistrationInfo.ts","components/RegistrationChecklist/RegistrationChecklist.tsx","components/RegistrationChecklist/index.ts","components/SubmissionsPage/index.ts","components/SubmissionsPage/SubmissionsPage.tsx","actions/submissions.ts","containers/Submissions.ts","components/ScoreboardPage/ScoreboardPage.tsx","components/ScoreboardPage/index.ts","actions/scoreboard.ts","containers/Scoreboard.ts","components/Tabs/index.ts","components/Tabs/Tabs.tsx","components/BlogPost/index.ts","components/BlogPost/BlogPost.tsx","components/BlogPage/BlogList.tsx","components/BlogPage/BlogPage.tsx","components/BlogPage/index.ts","components/BlogPostPage/index.ts","components/BlogPostPage/BlogPostPage.tsx","components/App/AppRouter.tsx","utils/eventsListener.ts","components/App/App.tsx","components/App/index.ts","containers/App.ts","reducers/app.ts","reducers/team.ts","reducers/submissions.ts","reducers/scoreboard.ts","reducers/index.ts","index.tsx","components/Landing/LandingPage/styles.module.css","components/SubmissionsPage/styles.module.css","components/Header/styles.module.css","components/RegistrationChecklist/styles.module.css","components/forms.module.css","components/Tabs/styles.module.css","components/BlogPost/styles.module.css","components/TeamForm/styles.module.css","components/BlogPostPage/styles.module.css","components/Toast/styles.module.css","components/LoginPage/styles.module.css","components/RegistrationPage/styles.module.css","components/BlogPage/styles.module.css","components/App/styles.module.css","components/TeamInfoPage/styles.module.css","components/ShowAndCopyForm/styles.module.css","components/DateTime/style.module.css"],"names":["module","exports","ROUTES","blogTabs","unauthLinks","url","content","authLinks","renderLinks","links","map","link","to","className","styles","key","activeClassName","activeLink","Header","props","isLoggedIn","Boolean","team","root","titleLink","subtitle","date","toNow","fromNow","isTeamLoading","renderAuthorizedLinks","Toast","interval","onClose","this","undefined","setTimeout","clearTimeout","message","isError","box","error","React","Component","Error","closeError","errorText","LandingPage","video","target","rel","title","width","height","src","frameBorder","allow","allowFullScreen","section","features__double","href","features","features__emoji","role","aria-label","features__title","features__pro","videos","thanks","thanks__title","thanks__script","supporters","supporters__title","supporters__script","RulesPage","emptyTeam","teamName","gitRepositoryUrl","customData_country","customData_peopleAmount","customData_email","countries","countriesJson","TeamForm","onChange","field","e","val","value","setState","teamInfo","state","registerTeam","a","preventDefault","validate","onSubmit","startValue","validations","buttonText","isEditForm","loading","globalForm","form","renderRow","autoFocus","maxLength","type","placeholder","renderCountrySelect","buttonRow","disabled","label","fieldName","required","row","style","name","country","text","test","Object","keys","length","RegistrationPage","disclaimer","register","json","sendGetRequest","sendRequest","sendPostFormRequest","body","method","headers","sendPatchFormRequest","params","fetch","then","resp","contentType","get","split","ok","errorJson","Promise","reject","JSON","stringify","errMessage","status","statusText","serverUrl","teams","registration","currentTeam","submissions","events","scoreboard","problemsScoreboard","createSetErrorAction","payload","createFormData","obj","entries","i","encodeURIComponent","join","createQueryString","createUpdateApiKeyAction","apiKey","createUpdateTeamAction","data","connect","store","teamLoading","dispatch","action","createEmptyAction","LOAD_TEAM","window","localStorage","setItem","LoginPage","login","requestUrl","ShowAndCopyForm","showToast","closeToast","rows","onClick","TeamInfoPage","SubmissionStatus","teamForForm","customData","peopleAmount","email","deployKey","editTeam","getState","formatter","Intl","DateTimeFormat","hour","minute","month","day","hour12","DateTime","BuildSystemRegistrationStatus","dateStr","Date","resolvedOptions","timeZone","format","done","todo","fail","items","Status","Pending","Failed_Unknown","Failed_GitRepository_InvalidUrl","Failed_GitRepository_AuthFailed","Failed_GitRepository_NoBranch","Succeeded","branch","haveSubmissions","RegistrationChecklist","isDelimiterShown","isErrorShown","errorSplit","errorMessage","list","item","doShowDelimiter","isLastItem","doShowError","delimiter","SubmissionsPage","getSubmissions","loadSubmissions","some","checklist","buildSystemRegistrationInfo","help","renderSubmissions","renderHelpMessage","table","colSpan","textAlign","s","Failed_Build","Failed_Test","isFailed","toLowerCase","indexOf","commitHash","createdAt","substring","pre","branchName","commitMessage","statusFailed","buildLogKey","logLink","testLogKey","teamSubmissions","updateLastSeenSubmission","SortDirection","id","ScoreboardPage","sortBy","sortDirection","decrease","cellForProblem","problem","problemId","description","startsWith","replace","buttonClass","sortButton","sortDown","sortUp","alignRight","changeSorted","scoreboardTeam","index","problems","itemCountry","find","c","teamId","activeTeam","alignCenter","shortValue","p","problemScore","solvedAt","score","lighten","increase","loadProblemScoreboard","scoreByTeams","teamsOrder","sort","b","aScore","bScore","aProblem","bProblem","sortElements","renderHead","filter","tuple","rowSpan","alignLeft","problemsHeader","result","problemDescription","frozenAt","Tabs","hash","location","tabs","tab","listItem","active","BlogPost","author","isInList","intl","timeZoneName","year","header","titleText","renderTitle","linkTarget","escapeHtml","source","BlogList","posts","BlogPage","orgsPosts","astronomerPosts","BlogPostPage","postId","match","astronomerPostIndex","findIndex","elem","parseInt","orgsPostIndex","postIndex","currentPost","nextPost","prevPost","footer","footerItem","AppRouter","exact","path","component","children","forUnauthorized","Registration","Login","forAuthorized","TeamInfo","Submissions","EventType","SubmissionChangeType","NonRatingGameChangeType","TeamChangeType","getApiKey","urlParams","reduce","acc","getItem","App","listener","deleteApiKey","removeItem","hasApiKey","updateApiKey","updateTeam","setError","loadTeam","close","prevProps","addTeam","addListeners","container","logout","handler","subscribedEventTypes","closed","connected","sticky","uuid","connection","HubConnectionBuilder","withUrl","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","console","log","updateSubscription","stop","eventTypes","x","send","onclose","on","eventType","subscribe","unsubscribe","listenEvents","Submission","Team","LightningScoreboard","loadLightningScoreboard","lastSubmission","lastSeen","app","err","defaultStore","appReducer","defaultState","teamReducer","submissionsReducer","scoreboardReducer","rootReducer","combineReducers","createStore","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d646d42d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"styles_table__yP7pN\",\"alignLeft\":\"styles_alignLeft__3pZ7p\",\"alignCenter\":\"styles_alignCenter__iu3xM\",\"alignRight\":\"styles_alignRight__1iauJ\",\"lighten\":\"styles_lighten__-4OgN\",\"problemsHeader\":\"styles_problemsHeader__2-O8S\",\"activeTeam\":\"styles_activeTeam__1rxXI\",\"problemScore\":\"styles_problemScore__15jnr\",\"score\":\"styles_score__1WsB6\",\"sortButton\":\"styles_sortButton__16pYX\",\"sortDown\":\"styles_sortDown__1xiRz\",\"sortUp\":\"styles_sortUp__3mx9g\"};","export const ROUTES = {\n    rules: '/rules',\n    registration: '/registration',\n    login: '/login',\n    teamInfo: '/team',\n    submissions: '/submissions',\n    scoreboard: '/scoreboard',\n    blog: '/blog',\n    post: '/post',\n};\n\nexport const blogTabs = {\n    orgs: '#orgs',\n    pegovka: '#pegoovka',\n}\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport styles from './styles.module.css';\nimport Moment from \"react-moment\";\nimport { blogTabs, ROUTES } from '../../consts/routes';\nimport Team from '../../models/Team';\n\nconst startDateTime = '2020-07-17T13:00Z';\nconst endDateTime = '2020-07-20T13:00Z';\n\ntype HeaderProps = {\n    team: Team | null;\n    isTeamLoading: boolean;\n    logout: () => void;\n}\n\nconst unauthLinks = [\n    { url: ROUTES.registration, content: 'Sign up' },\n    { url: ROUTES.login, content: 'Log in', },\n    { url: ROUTES.blog, content: 'Blog' },\n    // { url: ROUTES.scoreboard, content: 'Scoreboard' }\n]\n\nconst authLinks = [\n    { url: ROUTES.teamInfo, content: 'Profile' },\n    { url: ROUTES.submissions, content: 'Submissions' },\n    { url: ROUTES.blog + blogTabs.orgs, content: 'Blog' },\n    // { url: ROUTES.scoreboard, content: 'Scoreboard' },\n]\n\nexport default function Header(props: HeaderProps) {\n    const isLoggedIn = Boolean(props.team);\n    return (\n        <header className={ styles.root }>\n            <h1>\n                <Link to='/' className={ styles.titleLink }>ICFP Programming Contest 2020</Link>\n                <div className={ styles.subtitle }>\n                    has started <Moment date={ startDateTime } toNow />,\n                    will end <Moment date={ endDateTime } fromNow />\n                </div>\n            </h1>\n            <div className={ styles.links }>\n                { !props.isTeamLoading &&\n                <>\n                    { isLoggedIn ? renderAuthorizedLinks(props) : renderLinks(unauthLinks) }\n                </>\n                }\n            </div>\n        </header>\n    )\n}\n\n\nfunction renderLinks(links: typeof unauthLinks) {\n    return <>\n        { links.map(link =>\n            <NavLink to={ link.url } className={ styles.link } key={ link.url } activeClassName={ styles.activeLink }>\n                { link.content }\n            </NavLink>\n        ) }\n    </>\n}\n\nfunction renderAuthorizedLinks(props: HeaderProps) {\n    const { team } = props;\n    if (!team) return;\n    return (\n        <>\n            { renderLinks(authLinks) }\n        </>\n    )\n}\n","import Header from './Header';\nexport default Header;\n","import Toast from './Toast';\nexport default Toast;\n","import React from 'react';\nimport styles from './styles.module.css';\n\nconst interval = 5000\n\ntype ToastProps = {\n    message: string\n    isError?: boolean\n    onClose?: () => void\n}\n\nexport default class Toast extends React.Component<ToastProps> {\n    interval?: NodeJS.Timeout\n\n    componentDidMount() {\n        const { onClose } = this.props;\n\n        if (onClose !== undefined) {\n            this.interval = setTimeout(onClose, interval)\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearTimeout(this.interval);\n        }\n    }\n\n    render() {\n        const { message, isError } = this.props;\n\n        return (\n            <div className={ styles.root }>\n                <div className={ styles.box + (isError ? ' ' + styles.error : '') }>\n                    { message }\n                </div>\n            </div>\n        )\n    }\n}\n","import Error from './Error';\nexport default Error;\n","import React from 'react';\nimport Toast from \"../Toast\";\n\ntype ErrorProps = {\n    error: Error | string;\n    closeError: () => void;\n}\n\nexport default function Error(props: ErrorProps) {\n    const { closeError, error } = props;\n    const errorText = typeof error === 'string' ? error : error.message;\n    return (\n        <Toast message={ errorText } isError onClose={ closeError } />\n    )\n}\n","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import React from 'react';\nimport styles from './styles.module.css';\nimport { ROUTES } from \"../../../consts/routes\";\nimport { Link } from \"react-router-dom\";\n\nexport default function LandingPage() {\n    return (\n        <div className={ styles.root }>\n            <section className={ styles.video }>\n                <div className={ styles.subtitle }>\n                    Welcome to the contest!<br/>\n                    Watch the video and read <Link to={ROUTES.post + '/2048'} \n                                                   target=\"_blank\" rel=\"noopener noreferrer\">task specification</Link>\n                </div>\n                <iframe title=\"title-video\" width=\"666\" height=\"375\" src=\"https://www.youtube.com/embed/PzJ6gfo92oA\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen/>\n            </section>\n\n            <section className={ styles.section }>\n                <ul className={ styles.features__double }>\n                    <li>\n                        <h2>Get funky</h2>\n\n                        <p>Join #icfp-contest in <a href=\"https://discord.com/invite/xvMJbas\" target=\"_blank\" rel=\"noopener noreferrer\">Discord</a></p>\n                        <p>Follow @icfpcontest2020 on <a href=\"https://twitter.com/icfpcontest2020\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a></p>\n                    </li>\n                    <li>\n                        <h2>Get help</h2>\n\n                        <p>Check #support in <a href=\"https://discord.com/invite/xvMJbas\" target=\"_blank\" rel=\"noopener noreferrer\">Discord</a></p>\n                        <p>Write a direct message on <a href=\"https://twitter.com/icfpcontest2020\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a></p>\n                        {/*<p>File an issue on <a href=\"https://github.com/icfpcontest2020/dockerfiles/issues/new?labels=submissions&template=submissions.md&title=Submissions%3A+\"*/}\n                        {/*    target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></p>*/}\n                        <p>Have a look at the <Link to={ ROUTES.rules } target=\"_blank\">rules</Link></p>\n                        {/*<p>Read about the <a href=\"https://github.com/icfpcontest2020/dockerfiles/blob/master/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">submissions</a></p>*/}\n                    </li>\n                    <li>\n                        <div/>\n                    </li>\n                </ul>\n            </section>\n\n            <section className={ styles.section }>\n                <h2>Something to compete for</h2>\n\n                <ul className={ styles.features }>\n                    <li>\n                        <div className={ styles.features__emoji }>\n                            <span role=\"img\" aria-label=\"\">🤪</span>\n                        </div>\n                        <div className={ styles.features__title }>Fun & joy.</div>\n                        <div>These are noble feelings to pursue during the contest</div>\n                    </li>\n                    <li>\n                        <div className={ styles.features__emoji }>\n                            <span role=\"img\" aria-label=\"\">🎖</span>\n                        </div>\n                        <div className={ styles.features__title }>1st @ lightning division.</div>\n                        <div>One team will take the 1st place after 24 hours</div>\n                        <div className={ styles.features__pro }>Their tools will be named very suitable for rapid prototyping</div>\n                    </li>\n                    <li>\n                        <div className={ styles.features__emoji }>\n                            <span role=\"img\" aria-label=\"\">🏅</span>\n                        </div>\n                        <div className={ styles.features__title }>Judges' prize.</div>\n                        <div>One team which will do something outstanding will take the judges' prize</div>\n                        <div className={ styles.features__pro }>This team will be named an extremely cool bunch of hackers</div>\n                    </li>\n                    <li>\n                        <div className={ styles.features__emoji }>\n                            <span role=\"img\" aria-label=\"\">🥇</span>\n                        </div>\n                        <div className={ styles.features__title }>1st @ full contest.</div>\n                        <div>One team will take the 1st place after 72 hours</div>\n                        <div className={ styles.features__pro }>Their tools will be named programming tools of choice for discriminating hackers</div>\n                    </li>\n                    <li>\n                        <div className={ styles.features__emoji }>\n                            <span role=\"img\" aria-label=\"\">🥈</span>\n                        </div>\n                        <div className={ styles.features__title }>2nd @ full contest.</div>\n                        <div>One team will take the 2nd place after 72 hours</div>\n                        <div className={ styles.features__pro }>Their tools will be named fine programming tools for many applications</div>\n                    </li>\n                    <li>\n                        <div className={ styles.features__emoji }>\n                            <span role=\"img\" aria-label=\"\">🥉</span>\n                        </div>\n                        <div className={ styles.features__title }>3rd @ full contest.</div>\n                        <div>One team will take the 3rd place after 72 hours</div>\n                        <div className={ styles.features__pro }>Their tools will be named not too shabby</div>\n                    </li>\n                </ul>\n            </section>\n\n            <section className={ styles.section }>\n                <h2>Look what has happened at Pegovka Observatory</h2>\n\n                <ul className={ styles.features }>\n                    <li>\n                        <div className={ styles.features__emoji }>\n                            <span role=\"img\" aria-label=\"\">😱🙀</span>\n                        </div>\n                        <div>\n                            Read through a <a href=\"https://pegovka.space\" target=\"_blank\" rel=\"noopener noreferrer\">surprising story</a> of Russian astronomer Ivan Zaitsev\n                        </div>\n                    </li>\n                    <li>\n                        <div className={ styles.features__emoji }>\n                            <span role=\"img\" aria-label=\"\">👩‍💻👨‍💻</span>\n                        </div>\n                        <div>\n                            Join the <a href=\"https://discord.com/invite/xvMJbas\" target=\"_blank\" rel=\"noopener noreferrer\">collective chat</a> with passionate participants\n                        </div>\n                    </li>\n                    <li>\n                        <div className={ styles.features__emoji }>\n                            <span role=\"img\" aria-label=\"\">📈📉</span>\n                        </div>\n                        <div>\n                            Recollect what's already known via the <a href=\"https://message-from-space.readthedocs.io/en/latest/\" target=\"_blank\" rel=\"noopener noreferrer\">Read the Docs</a> page\n                        </div>\n                    </li>\n                </ul>\n\n                <ul className={ styles.videos }>\n                    <li>\n                        <iframe title=\"first-video\" width=\"444\" height=\"250\" src=\"https://www.youtube.com/embed/EjL-5EuQeCU\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen/>\n                    </li>\n                    <li>\n                        <iframe title=\"second-video\" width=\"444\" height=\"250\" src=\"https://www.youtube.com/embed/j7kVUaZCcMU\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen/>\n                    </li>\n                </ul>\n            </section>\n\n            <section className={ styles.section }>\n                <h2>Special thanks</h2>\n\n                <ul className={ styles.thanks }>\n                    <li>\n                        <div className={ styles.thanks__title }>\n                            <a href=\"https://www.icfpconference.org\" target=\"_blank\" rel=\"noopener noreferrer\">ICFP</a>\n                        </div>\n                        <div className={ styles.thanks__script }>\n                            for sponsoring ICFP Contest and making it happen for 23 years in a row\n                        </div>\n                    </li>\n                    <li>\n                        <div className={ styles.thanks__title }>\n                            <a href=\"https://tech.kontur.ru\" target=\"_blank\" rel=\"noopener noreferrer\">Kontur</a>\n                        </div>\n                        <div className={ styles.thanks__script }>\n                            for sponsoring ICFP Contest 2020 and employing the team of its organizers\n                        </div>\n                    </li>\n                </ul>\n            </section>\n\n            <section className={ styles.section }>\n                <h2>Warm wishes to our supporters</h2>\n\n                <ul className={ styles.supporters }>\n                    <li>\n                        <div className={ styles.supporters__title }>\n                            <a href=\"https://adventofcode.com\" target=\"_blank\" rel=\"noopener noreferrer\">Advent of Code</a>\n                        </div>\n                        <div className={ styles.supporters__script }>\n                            and its creator <a href=\"https://twitter.com/ericwastl\" target=\"_blank\" rel=\"noopener noreferrer\">Eric&nbsp;Wastl</a>\n                        </div>\n                    </li>\n                    <li>\n                        <div className={ styles.supporters__title }>\n                            <a href=\"https://atcoder.jp\" target=\"_blank\" rel=\"noopener noreferrer\">AtCoder</a>\n                        </div>\n                        <div className={ styles.supporters__script }>\n                            and its founder <a href=\"https://twitter.com/chokudai\" target=\"_blank\" rel=\"noopener noreferrer\">Naohiro&nbsp;Takahashi</a>\n                        </div>\n                    </li>\n                    <li>\n                        <div className={ styles.supporters__title }>\n                            <a href=\"https://codeforces.com/?locale=en\" target=\"_blank\" rel=\"noopener noreferrer\">Codeforces</a>\n                        </div>\n                        <div className={ styles.supporters__script }>\n                            and its founder <a href=\"https://twitter.com/MikeMirzayanov\" target=\"_blank\" rel=\"noopener noreferrer\">Mike&nbsp;Mirzayanov</a>\n                        </div>\n                    </li>\n                    {/*<li>*/}\n                    {/*    <div className={ styles.supporters__title }>*/}\n                    {/*        <a href=\"https://www.codingame.com\" target=\"_blank\" rel=\"noopener noreferrer\">CodinGame</a>*/}\n                    {/*    </div>*/}\n                    {/*    <div className={ styles.supporters__script }>*/}\n                    {/*        and its community manager <a href=\"https://twitter.com/thibaud_jobert\" target=\"_blank\" rel=\"noopener noreferrer\">Thibaud&nbsp;Jobert</a>*/}\n                    {/*    </div>*/}\n                    {/*</li>*/}\n                    <li>\n                        <div className={ styles.supporters__title }>\n                            <a href=\"https://devzen.ru\" target=\"_blank\" rel=\"noopener noreferrer\">DevZen Podcast</a>\n                        </div>\n                        <div className={ styles.supporters__script }>\n                            and its hosts <a href=\"https://twitter.com/SBozhko\" target=\"_blank\" rel=\"noopener noreferrer\">Sveta</a>, <a href=\"https://twitter.com/afiskon\" target=\"_blank\" rel=\"noopener noreferrer\">Aleksander</a>, <a href=\"https://twitter.com/gliush\" target=\"_blank\" rel=\"noopener noreferrer\">Ivan</a>, and&nbsp;<a href=\"https://twitter.com/sum3rman\" target=\"_blank\" rel=\"noopener noreferrer\">Valery</a>\n                        </div>\n                    </li>\n                    <li>\n                        <div className={ styles.supporters__title }>\n                            <a href=\"https://it-people.ru\" target=\"_blank\" rel=\"noopener noreferrer\">IT People</a>\n                        </div>\n                        <div className={ styles.supporters__script }>\n                            and its founder <a href=\"https://twitter.com/gerasimovich_yu\" target=\"_blank\" rel=\"noopener noreferrer\">Yulia&nbsp;Gerasimovich</a>\n                        </div>\n                    </li>\n                    <li>\n                        <div className={ styles.supporters__title }>\n                            <a href=\"https://jugru.org/en/\" target=\"_blank\" rel=\"noopener noreferrer\">JUG Ru Group</a>\n                        </div>\n                        <div className={ styles.supporters__script }>\n                            and its producer <a href=\"https://twitter.com/23derevo\" target=\"_blank\" rel=\"noopener noreferrer\">Alexey&nbsp;Fyodorov</a>\n                        </div>\n                    </li>\n                    <li>\n                        <div className={ styles.supporters__title }>\n                            And also:\n                        </div>\n                        <div className={ styles.supporters__script }>\n                            <a href=\"https://twitter.com/ilyasergey\" target=\"_blank\" rel=\"noopener noreferrer\">Ilya&nbsp;Sergey</a>, <a href=\"https://twitter.com/nikitonsky\" target=\"_blank\" rel=\"noopener noreferrer\">Nikita&nbsp;Prokopov</a>, and <a href=\"https://twitter.com/VBragilevsky\" target=\"_blank\" rel=\"noopener noreferrer\">Vitaly&nbsp;Bragilevsky</a>\n                        </div>\n                    </li>\n                </ul>\n            </section>\n        </div>\n    )\n}\n","import RulesPage from './RulesPage';\nexport default RulesPage;\n","import React from 'react';\n\nexport default function RulesPage() {\n    return (\n        <main>\n            <h2>Contest Rules</h2>\n            <h3>1. Participants</h3>\n            <p>\n                This is an open contest. Anyone may participate in ICFP Programming Contest 2020 except for its Organizers.\n                Employees of the company which Organizers are affiliated with are not eligible for prizes.\n            </p>\n            <h3>2. Teams</h3>\n            <p>\n                Contestants are free to organize themselves into teams of any size.\n                A contestant may only be a member of a single team.\n                Teams may not divide, merge, or collaborate after the start of the contest.\n            </p>\n            <h3>3. Registration</h3>\n            <p>\n                No advance registration or entry fee is required.\n                Teams must register during the contest to obtain a team-specific private identifier that will be used for submissions and profiles.\n                Teams using more than one private identifier during the contest may be disqualified.\n            </p>\n            <h3>4. Languages & platforms</h3>\n            <p>\n                Teams are free to use any programming language(s) on any platform(s).\n                Some programming languages and platforms may require additional tuning of the submission system.\n                Participants are encouraged to check the <a href=\"https://github.com/icfpcontest2020/dockerfiles/blob/master/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">supported languages and platforms</a> in advance and inform Organizers if their language or platform of choice is missing.\n            </p>\n            <h3>5. Prizes</h3>\n            <p>\n                Teams wishing to be considered for prizes must submit source code at the end of the contest.\n                The exact details of contest submissions will be announced at the start of the contest.\n                Teams may submit multiple times during the contest.\n            </p>\n            <p>\n                The Organizers will distribute US $2,000 in prize money between the teams that will take the 1st, the 2nd, and the 3rd places in the contest (full  72-hour division).\n            </p>\n            <h3>6. Records</h3>\n            <p>\n                The Organizers retain the right to monitor, record, and investigate the submissions, other contest-related activities, or lack thereof, of contestants and teams.\n                The records are used for the sole purpose of judgment and are discarded once the contest-related events are over.\n            </p>\n            <h3>7. Fair play</h3>\n            <p>\n                Contestants are kindly asked not to attempt to attack the contest server.\n                That will spoil the fun for the other teams and the Organizers, who worked hard to bring you this experience.\n                Violations of these rules, attempts to compromise the integrity of the contest infrastructure, attempts to interfere with other contestants, collusion between the teams, or attempts to contravene the spirit of the contest will lead to disqualification of the involved contestants and/or teams.\n            </p>\n            <h3>8. Intellectual property</h3>\n            <p>\n                Contestants retain ownership of all intellectual property rights in and to any submitted solutions, source code, custom tools, and related materials (“Submissions”) that contestants had before submission.\n                As a condition of submission, contestants grant the Organizers a non-exclusive, perpetual, irrevocable, worldwide, royalty-free license to use, reproduce, publish, distribute, publicly perform and publicly display the Submissions, allowing the Organizers to test and evaluate the Submissions for purposes of the contest.\n            </p>\n            <h3>9. Authority</h3>\n            <p>All decisions of the Organizers are final.</p>\n\n            <h2>Changelog</h2>\n            <h3>Jul 6, 2020 — 1. Participants</h3>\n            <p>\n                Organizers deem unfeasible to prevent ~9,000 employees of Kontur, the company which also employs the majority of Organizers, from participation in the contest.\n                However, Organizers declare that they kept secret from their coworkers everything which may give them any competitive advantage.\n                Therefore, Organizers have removed the limitation for employees of Kontur to participate in the contest.\n                At the same time, Organizes have added the rule that employees of Kontur are not eligible for prizes.\n            </p>\n            <h3>Jul 6, 2020 — 4. Languages & platforms</h3>\n            <p>\n                Organizers have decided to use a particular kind of <a href=\"https://github.com/icfpcontest2020/dockerfiles/blob/master/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">submission system</a> for this contest which requires teams to use Git and Docker.\n                Therefore, Organizers have added the suggestion for teams to check the supported languages and platforms in advance.\n            </p>\n            <h3>Jul 14, 2020 — 5. Prizes</h3>\n            <p>\n                Organizers have clarified the amount of prize money awarded to the winning teams.\n            </p>\n        </main>\n    )\n}\n","const emptyTeam = {\n    teamName: '',\n    gitRepositoryUrl: '',\n    customData_country: 'World',\n    customData_peopleAmount: '',\n    customData_email: '',\n};\n\nexport default emptyTeam;\n","import React, { ChangeEvent, FormEvent, ReactElement } from 'react';\nimport styles from './styles.module.css';\nimport globalForm from '../forms.module.css';\nimport RegistrationTeam from '../../models/RegistrationTeam';\nimport countriesJson from '../../consts/countries.json';\nimport ICountry from '../../models/Country';\nimport Toast from \"../Toast\";\n\ntype TeamFormProps = {\n    startValue: RegistrationTeam;\n    loading: boolean;\n    isEditForm?: boolean;\n    onSubmit: (team: RegistrationTeam) => void;\n};\n\ntype Validations = { [key: string]: string };\n\ntype TeamFormState = {\n    teamInfo: RegistrationTeam;\n    validations: Validations;\n};\n\nconst countries = countriesJson as ICountry[]\n\nexport default class TeamForm extends React.Component<TeamFormProps, TeamFormState> {\n    constructor(props: TeamFormProps) {\n        super(props);\n\n        this.state = {\n            teamInfo: { ...props.startValue },\n            validations: {},\n        }\n    }\n\n    render() {\n        const { isEditForm, loading } = this.props;\n\n        let buttonText: string;\n\n        if (isEditForm) {\n            buttonText = loading ? \"Updating...\" : \"Update\";\n        } else {\n            buttonText = loading ? \"Registering...\" : \"Register\";\n        }\n\n        return (\n            <form className={ globalForm.form } onSubmit={ this.registerTeam }>\n                { this.renderRow('Team name *', 'teamName', true, {\n                    autoFocus: !isEditForm,\n                    maxLength: 100,\n                }) }\n                { this.renderRow('Contact email *', 'customData_email', true, {\n                    type: 'email',\n                    maxLength: 100,\n                }) }\n                { this.renderRow('Repository SSH URL *', 'gitRepositoryUrl', true, {\n                    maxLength: 1024,\n                    placeholder: 'git@example.com:user/repo.git'\n                }) }\n                { this.renderCountrySelect() }\n                { this.renderRow('Team size', 'customData_peopleAmount', false, {\n                    type: 'number',\n                    maxLength: 100,\n                }) }\n                <div className={ styles.buttonRow }>\n                    <span/>\n                    <div>\n                        <button type='submit' disabled={ loading }>\n                            { buttonText }\n                        </button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    renderRow(label: string | ReactElement, fieldName: keyof RegistrationTeam, required = false, props?: Object) {\n        const { validations } = this.state\n        const isError = fieldName in validations;\n\n        return (\n            <label className={ styles.row }>\n                <span>{ label }</span>\n                <span style={ { width: '100%' } }>\n                    <input className={ isError ? ' ' + styles.error : '' }\n                           name={ fieldName }\n                           value={ this.state.teamInfo[fieldName] }\n                           required={ required }\n                           onChange={ this.onChange(fieldName) }\n                           { ...props }\n                    />\n                    { isError && <Toast message={ validations[fieldName] } isError /> }\n                </span>\n            </label>\n        );\n    }\n\n    renderCountrySelect() {\n        return (\n            <label className={ styles.row }>\n                <span>Your country</span>\n                <select name='customData_country'\n                        value={ this.state.teamInfo['customData_country'] }\n                        onChange={ this.onChange('customData_country') }>\n                    { countries.map(country =>\n                        <option value={ country.value } key={ country.value }>{ country.text }</option>\n                    ) }\n                </select>\n            </label>\n        )\n    }\n\n    onChange = (field: keyof RegistrationTeam) => (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const val = e.target.value;\n        this.setState({\n            teamInfo: {\n                ...this.state.teamInfo,\n                [field]: val,\n            }\n        })\n    }\n\n    registerTeam = async (e: FormEvent) => {\n        e.preventDefault();\n\n        if (!this.validate()) return;\n\n        this.props.onSubmit(this.state.teamInfo);\n    }\n\n    validate() {\n        const { teamName, gitRepositoryUrl } = this.state.teamInfo;\n\n        const validations: Validations = {};\n        if (!teamName) {\n            validations['teamName'] = 'Team Name is required for registration';\n        }\n\n        if (!gitRepositoryUrl) {\n            validations['gitRepositoryUrl'] = 'Repository SSH URL is required for registration';\n        }\n\n        if (!/[^@]+@[^@:]+/.test(gitRepositoryUrl)) {\n            validations['gitRepositoryUrl'] = 'Make sure the url you enter is a valid SSH URL';\n        }\n\n        this.setState({ validations })\n\n        return Object.keys(validations).length === 0;\n    }\n}\n","import TeamForm from './TeamForm';\nexport default TeamForm;\n","import RegistrationPage from './RegistrationPage';\nexport default RegistrationPage;\n","import React from 'react';\nimport styles from './styles.module.css';\nimport emptyTeam from '../../consts/emptyTeam';\nimport TeamForm from '../TeamForm';\nimport RegistrationTeam from '../../models/RegistrationTeam';\n\n\ntype RegistrationPageProps = {\n    loading: boolean;\n    register: (team: RegistrationTeam) => void;\n}\n\nexport default function RegistrationPage(props: RegistrationPageProps) {\n    return (\n        <div className={ styles.root }>\n            <h2>Team Registration</h2>\n            <div className={ styles.disclaimer }>\n                <p>As part of registration, we kindly ask to create a private Git repository for your team and provide\n                    its SSH URL.</p>\n                <p>Don't worry, all information you enter here can be updated later.</p>\n            </div>\n            <TeamForm startValue={ emptyTeam } onSubmit={ props.register } loading={ props.loading }/>\n        </div>\n    )\n}\n","const json = 'application/json';\nconst form =  'application/x-www-form-urlencoded';\n\nexport function sendGetRequest(url: string) {\n    return sendRequest(url, {});\n}\n\nexport function sendPostRequest(url: string, body: object) {\n    return sendRequest(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': json,\n        },\n        body: JSON.stringify(body),\n    })\n}\n\nexport function sendPostFormRequest(url: string, body: string) {\n    return sendRequest(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': form,\n        },\n        body: body,\n    })\n}\n\nexport function sendPatchFormRequest(url: string, body: string) {\n    return sendRequest(url, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': form,\n        },\n        body: body,\n    })\n}\n\nfunction sendRequest(url: string, params: RequestInit) {\n    return fetch(url, params).then(async resp => {\n        const contentType = resp.headers.get('Content-Type')?.split(';')[0];\n\n        if (resp.ok && contentType === json) {\n            return resp.json();\n        }\n\n        if (resp.ok) {\n            return;\n        }\n        \n        \n        if (contentType === json) {\n            const errorJson = await resp.json();\n            return Promise.reject(errorJson.message || errorJson.error || JSON.stringify(errorJson));\n        }\n        \n        const errMessage = `Something went wrong. Server answer is ${ resp.status }${ \n            resp.statusText ? ':' + resp.statusText : '' }`\n        return Promise.reject(errMessage);\n        \n    });\n}\n","const serverUrl = 'https://icfpc2020.testkontur.ru';\nconst teams = `${serverUrl}/teams`;\nexport const registration = `${ teams }/register`;\nexport const currentTeam = `${ teams }/current`;\nexport const submissions = `${serverUrl}/submissions`; \nexport const events = `${serverUrl}/events/`; \nexport const scoreboard = `${serverUrl}/scoreboard`;\nexport const problemsScoreboard = `${scoreboard}/lightning`;\n\n\n","import { SET_ERROR } from '../consts/actions';\nimport { ThunkAction } from 'redux-thunk';\nimport IStore from '../models/store';\nimport IAppAction from '../models/actions/app';\nimport { Dispatch } from 'redux';\n\nexport const createSetErrorAction = (error: string | Error | null) => ({\n    type: SET_ERROR,\n    payload: error,\n})\n\nexport function setErrorAction(action: { payload: string | Error | null }):\n    ThunkAction<void, IStore, unknown, IAppAction>  {\n    return (dispatch: Dispatch) => {\n        dispatch(createSetErrorAction(action.payload));\n    }\n}\n","export const SET_ERROR = 'SET_ERROR';\n\nexport const UPDATE_API_KEY = 'UPDATE_API_KEY';\nexport const UPDATE_TEAM = 'UPDATE_TEAM';\nexport const LOAD_TEAM = 'LOAD_TEAM';\n\nexport const LOAD_SUBMISSIONS = 'LOAD_SUBMISSIONS';\nexport const UPDATE_LAST_SEEN_SUBMISSION = 'UPDATE_LAST_SEEN_SUBMISSION';\n\nexport const LOAD_PROBLEM_SCOREBOARD = 'LOAD_PROBLEM_SCOREBOARD';\n\nexport const START = \"_START\";\nexport const SUCCESS = \"_SUCCESS\";\nexport const FAIL = \"_FAIL\";\nexport const FINISH = \"_FINISH\";\n","export default function createFormData(obj: object) {\n    return Object.entries(obj).map(i => `${ i[0] }=${ encodeURIComponent(i[1]) }`).join('&');\n}\n","export default function createQueryString(obj: object) {\n    return Object.entries(obj).map(([key, value]) => `${key}=${value}`).join('&');\n}\n","import { FINISH, LOAD_TEAM, START, UPDATE_API_KEY, UPDATE_TEAM } from '../consts/actions';\nimport { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport IStore from '../models/store';\nimport ITeamAction from '../models/actions/team';\nimport Team from '../models/Team';\nimport { sendGetRequest, sendPatchFormRequest, sendPostFormRequest } from '../utils/sendRequest';\nimport { currentTeam, registration } from '../consts/api';\nimport { createSetErrorAction } from './app';\nimport { API_KEY } from '../consts/strings';\nimport RegistrationTeam from '../models/RegistrationTeam';\nimport createFormData from '../utils/createFormData';\nimport createQueryString from '../utils/createQueryString';\n\nconst createUpdateApiKeyAction = (apiKey: string | null) => ({\n    type: UPDATE_API_KEY,\n    payload: apiKey,\n})\n\nconst createUpdateTeamAction = (team: Team | null) => ({\n    type: UPDATE_TEAM,\n    payload: team,\n})\n\nconst createLoadTeamStartAction = () => ({\n    type: LOAD_TEAM + START,\n})\n\nconst createLoadTeamFinishAction = () => ({\n    type: LOAD_TEAM + FINISH,\n})\n\nexport function updateApiKey(action: { payload: string | null }):\n    ThunkAction<void, IStore, unknown, ITeamAction> {\n    return (dispatch: Dispatch) => {\n        dispatch(createUpdateApiKeyAction(action.payload));\n    }\n}\n\nexport function updateTeam(action: { payload: Team | null }):\n    ThunkAction<void, IStore, unknown, ITeamAction> {\n    return (dispatch: Dispatch) => {\n        dispatch(createUpdateTeamAction(action.payload))\n    }\n}\n\nexport function loadTeam():\n    ThunkAction<Promise<any>, IStore, unknown, ITeamAction> {\n    return async (dispatch: Dispatch, getState: () => IStore) => {\n        dispatch(createLoadTeamStartAction());\n        const store = getState();\n        const apiKey = store.team.apiKey;\n        const requestUrl = `${ currentTeam }?${ createQueryString({ apiKey }) }`;\n        try {\n            const team = await sendGetRequest(requestUrl);\n            dispatch(createUpdateTeamAction(team));\n        } catch (e) {\n            dispatch(createSetErrorAction(e))\n        } finally {\n            dispatch(createLoadTeamFinishAction());\n        }\n    }\n}\n\nexport function login(action: { payload: string }):\n    ThunkAction<Promise<any>, IStore, unknown, ITeamAction> {\n    return async (dispatch: Dispatch) => {\n        dispatch(createLoadTeamStartAction());\n        const requestUrl = `${ currentTeam }?${ createQueryString({ apiKey: action.payload }) }`\n        try {\n            const team = await sendGetRequest(requestUrl);\n            window.localStorage.setItem(API_KEY, action.payload);\n            dispatch(createUpdateApiKeyAction(action.payload));\n            dispatch(createUpdateTeamAction(team));\n        } catch (e) {\n            dispatch(createSetErrorAction(e))\n        } finally {\n            dispatch(createLoadTeamFinishAction());\n        }\n    }\n}\n\nexport function register(action: { payload: RegistrationTeam }):\n    ThunkAction<Promise<any>, IStore, unknown, ITeamAction> {\n    return async (dispatch: Dispatch) => {\n        dispatch(createLoadTeamStartAction());\n        const body = createFormData(action.payload);\n        try {\n            const team = await sendPostFormRequest(registration, body);\n            window.localStorage.setItem(API_KEY, team.apiKey);\n            dispatch(createUpdateApiKeyAction(team.apiKey));\n            dispatch(createUpdateTeamAction(team));\n        } catch (e) {\n            dispatch(createSetErrorAction(e))\n        } finally {\n            dispatch(createLoadTeamFinishAction());\n        }\n    }\n}\n\nexport function editTeam(action: { payload: RegistrationTeam }):\n    ThunkAction<Promise<any>, IStore, unknown, ITeamAction> {\n    return async (dispatch: Dispatch, getState: () => IStore) => {\n        dispatch(createLoadTeamStartAction());\n        const store = getState();\n        const apiKey = store.team.apiKey;\n        const requestUrl = `${ currentTeam }?${ createQueryString({ apiKey }) }`;\n        const body = createFormData(action.payload);\n        try {\n            const team = await sendPatchFormRequest(requestUrl, body);\n            dispatch(createUpdateTeamAction(team));\n        } catch (e) {\n            dispatch(createSetErrorAction(e))\n        } finally {\n            dispatch(createLoadTeamFinishAction());\n        }\n    }\n}\n","export default function <T>(data: T) {\n    return {\n        type: '',\n        payload: data,\n    }\n}\n","import { connect } from 'react-redux';\nimport RegistrationPage from '../components/RegistrationPage';\nimport IStore from '../models/store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { register } from '../actions/team';\nimport createEmptyAction from '../utils/createEmptyAction';\nimport RegistrationTeam from '../models/RegistrationTeam';\n\nconst mapState = (store: IStore) => {\n    return {\n        loading: store.team.teamLoading,\n    }\n}\n\nconst mapDispatch = (dispatch: ThunkDispatch<IStore, unknown, AnyAction>) => {\n    return {\n        register: (team: RegistrationTeam) => dispatch(register(createEmptyAction(team))),\n    }\n}\n\n\nexport default connect(mapState, mapDispatch)(RegistrationPage);\n","export const API_KEY = 'apiKey';\n","import LoginPage from './LoginPage';\nexport default LoginPage;\n","import React, { ChangeEvent, FormEvent } from 'react';\nimport styles from './styles.module.css';\nimport globalForm from '../forms.module.css';\n\nexport interface LoginPageProps {\n    loading: boolean;\n    login: (apiKey: string) => void;\n}\n\ntype LoginPageState = {\n    apiKey: string;\n}\n\nexport default class LoginPage extends React.Component<LoginPageProps, LoginPageState> {\n    constructor(props: LoginPageProps) {\n        super(props);\n        this.state = {\n            apiKey: '',\n        };\n    }\n\n    render() {\n        const { loading } = this.props;\n        return (\n            <div>\n                <h2>Log In</h2>\n                <form className={ `${ styles.form } ${ globalForm.form }` } onSubmit={ this.onSubmit }>\n                    <label className={ styles.row }>\n                        <span>API key</span>\n                        <input name='apiKey'\n                               required\n                               autoFocus\n                               onChange={ this.onChange }\n                        />\n                    </label>\n                    <label className={ styles.buttonRow }>\n                        <span/>\n                        <div>\n                            <button type='submit' disabled={ loading }>\n                                { loading ? \"Logging In...\" : \"Log In\" }\n                            </button>\n                        </div>\n                    </label>\n                </form>\n            </div>\n        )\n    }\n\n    onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        this.setState({ apiKey: e.target.value })\n    }\n\n    onSubmit = async (e: FormEvent) => {\n        e.preventDefault();\n        const { apiKey } = this.state;\n        \n        this.props.login(apiKey);\n    }\n}\n","import { connect } from 'react-redux';\nimport LoginPage from '../components/LoginPage';\nimport IStore from '../models/store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { login } from '../actions/team';\nimport createEmptyAction from '../utils/createEmptyAction';\n\nconst mapState = (state: IStore) => {\n    return {\n        loading: state.team.teamLoading,\n    }\n}\n\nconst mapDispatch = (dispatch: ThunkDispatch<IStore, unknown, AnyAction>) => {\n    return {\n        login: (apiKey: string) => dispatch(login(createEmptyAction(apiKey))), \n    }\n}\n\n\nexport default connect(mapState, mapDispatch)(LoginPage);\n","import ShowAndCopyForm from './ShowAndCopyForm';\nexport default ShowAndCopyForm;\n","import React from 'react';\nimport styles from './styles.module.css';\nimport globalForm from '../forms.module.css';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Toast from '../Toast';\n\ninterface ShowAndCopyFormProps {\n    name: string;\n    value: string;\n    rows?: number;\n}\n\ninterface ShowAndCopyFormState {\n    showToast: boolean;\n}\n\nexport default class ShowAndCopyForm extends React.Component<ShowAndCopyFormProps, ShowAndCopyFormState> {\n    state = {\n        showToast: false,\n    }\n\n    render() {\n        const { showToast } = this.state;\n        const rows = this.props.rows || 1\n\n        return (\n            <form className={ `${ styles.root } ${ globalForm.form }` }>\n                { rows === 1 && (\n                    <input type=\"text\" disabled value={ this.props.value }/>\n                ) }\n\n                { rows !== 1 && (\n                    <textarea disabled rows={ rows } value={ this.props.value }/>\n                ) }\n\n                <div>\n                    <CopyToClipboard text={ this.props.value }>\n                        <button type='button' onClick={ this.showToast }>Copy { this.props.name }</button>\n                    </CopyToClipboard>\n                </div>\n                { showToast && <Toast message='Copied to clipboard' onClose={ this.closeToast }/> }\n            </form>\n        )\n    }\n\n    showToast = () => {\n        this.setState({ showToast: true });\n    }\n\n    closeToast = () => {\n        this.setState({ showToast: false });\n    }\n}\n","import TeamInfoPage from './TeamInfoPage';\nexport default TeamInfoPage;\n","export default interface Submission {\n    submissionId: string;\n    createdAt: string;\n    commitHash?: string;\n    branchName?: string;\n    commitMessage?: string;\n    buildLogKey?: string;\n    testLogKey?: string;\n    status: SubmissionStatus;\n}\n\nexport enum SubmissionStatus\n{\n    Building = 'Building',\n    Testing = 'Testing',\n    Failed_Build = 'Failed_Build',\n    Failed_Test = 'Failed_Test',\n    Failed_Unknown = 'Failed_Unknown',\n    Succeeded = 'Succeeded',\n}\n","import React from 'react';\nimport styles from './styles.module.css';\nimport Team from '../../models/Team';\nimport RegistrationTeam from '../../models/RegistrationTeam';\nimport TeamForm from '../TeamForm';\nimport ShowAndCopyForm from \"../ShowAndCopyForm\";\n\ntype TeamInfoPageProps = {\n    team: Team | null;\n    loading: boolean;\n    editTeam: (team: RegistrationTeam) => void;\n}\n\nexport default function TeamInfoPage(props: TeamInfoPageProps) {\n    const { team } = props;\n\n    if (!team) return null;\n\n    const teamForForm: RegistrationTeam = {\n        teamName: team.teamName,\n        gitRepositoryUrl: team.gitRepositoryUrl,\n        customData_peopleAmount: team.customData.peopleAmount || '',\n        customData_country: team.customData.country || '',\n        customData_email: team.customData.email || '',\n    }\n\n    return (\n        <main className={ styles.root }>\n            <h2>Profile: { team.teamName }</h2>\n\n            <h3>API key</h3>\n            <p>Beware not to lose your API key. Use it:</p>\n            <ul>\n                <li>to log in to the team profile (this page)</li>\n                <li>to send requests to Organizers' server</li>\n            </ul>\n            <br/>\n            <ShowAndCopyForm name=\"API key\"\n                             value={ team.apiKey }/>\n\n            <br/><br/>\n\n            <h3>Deploy key</h3>\n            <p>Add it to your repository as per <a href=\"https://github.com/icfpcontest2020/dockerfiles#getting-started\"\n                                                   target=\"_blank\" rel=\"noopener noreferrer\">submission rules</a>.</p>\n            <ShowAndCopyForm name=\"Deploy key\"\n                             value={ team.deployKey }/>\n\n            <br/><br/>\n\n            <h3>Team Info</h3>\n            <div>\n                <TeamForm startValue={ teamForForm }\n                          loading={ props.loading }\n                          onSubmit={ props.editTeam } isEditForm/>\n            </div>\n        </main>\n    )\n}\n","import { connect } from 'react-redux';\nimport TeamInfoPage from '../components/TeamInfoPage';\nimport IStore from '../models/store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { editTeam } from '../actions/team';\nimport createEmptyAction from '../utils/createEmptyAction';\nimport RegistrationTeam from '../models/RegistrationTeam';\n\nconst mapState = (store: IStore) => {\n    return {\n        team: store.team.team,\n        loading: store.team.teamLoading,\n    }\n}\n\nconst mapDispatch = (dispatch: ThunkDispatch<IStore, unknown, AnyAction>) => {\n    return {\n        editTeam: (team: RegistrationTeam) => dispatch(editTeam(createEmptyAction(team))),\n    }\n}\n\n\nexport default connect(mapState, mapDispatch)(TeamInfoPage);\n","import React from 'react';\nimport styles from './style.module.css';\n\ntype DateTimeProps = {\n    dateStr: string;\n}\n\nexport const formatter = new Intl.DateTimeFormat('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    month: 'short',\n    day: '2-digit',\n    hour12: false\n})\n\nexport default function DateTime(props: DateTimeProps) {\n    const { dateStr } = props;\n    const date = new Date(dateStr);\n\n    return (\n        <span className={ styles.root } title={Intl.DateTimeFormat().resolvedOptions().timeZone}>\n            {formatter.format(date)}\n        </span>\n    )\n}\n","import DateTime from './DateTime';\nexport default DateTime;\n","enum BuildSystemRegistrationStatus {\n    Pending = 'Pending',\n    Failed_GitRepository_InvalidUrl = 'Failed_GitRepository_InvalidUrl',\n    Failed_GitRepository_AuthFailed = 'Failed_GitRepository_AuthFailed',\n    Failed_GitRepository_NoBranch = 'Failed_GitRepository_NoBranch',\n    Failed_Unknown = 'Failed_Unknown',\n    Succeeded = 'Succeeded',\n}\nexport default BuildSystemRegistrationStatus;\n","import React from 'react';\nimport styles from './styles.module.css';\nimport { default as Status } from '../../models/BuildSystemRegistrationInfo';\nimport ShowAndCopyForm from \"../ShowAndCopyForm\";\n\ninterface RegistrationChecklistProps {\n    deployKey: string\n    status: Status;\n    errorMessage?: string;\n    haveSubmissions: boolean;\n}\n\nconst done = <span role=\"img\" aria-label=\"done\">✅</span>\nconst todo = <span role=\"img\" aria-label=\"todo\">☑️</span>\nconst fail = <span role=\"img\" aria-label=\"fail\">❌</span>\n\ninterface RegistrationChecklistItem {\n    title: React.ReactFragment\n    status: (props: RegistrationChecklistProps) => React.ReactFragment\n}\n\nexport const items: RegistrationChecklistItem[] = [\n    {\n        title: 'Register your team',\n        status: () => done\n    },\n    {\n        title: 'Create a private Git repository',\n        status: props => {\n                const status: {[key: string]: JSX.Element} = {\n                    [Status.Pending]: todo,\n                    [Status.Failed_Unknown]: todo,\n                    [Status.Failed_GitRepository_InvalidUrl]: fail,\n                    [Status.Failed_GitRepository_AuthFailed]: done,\n                    [Status.Failed_GitRepository_NoBranch]: done,\n                    [Status.Succeeded]: done,\n                };\n                return status[props.status] || todo;\n        }\n    },\n    {\n        title: <>Copy the deploy key and add it to your repository <a\n            href=\"https://github.com/icfpcontest2020/dockerfiles/blob/master/README.md\" target=\"_blank\"\n            rel=\"noopener noreferrer\">(?)</a></>,\n        status: props => {\n                const status: {[key: string]: JSX.Element} = {\n                    [Status.Pending]: todo,\n                    [Status.Failed_GitRepository_AuthFailed]: fail,\n                    [Status.Failed_GitRepository_InvalidUrl]: todo,\n                    [Status.Failed_Unknown]: todo,\n                    [Status.Failed_GitRepository_NoBranch]: done,\n                    [Status.Succeeded]: done,\n                };\n            return status[props.status] || todo;\n        }\n    },\n    {\n        title: <>Create a branch called <span className={ styles.branch }>submission</span></>,\n        status: props => {\n            const status: {[key: string]: JSX.Element} = {\n                [Status.Pending]: todo,\n                [Status.Failed_GitRepository_NoBranch]: fail,\n                [Status.Failed_GitRepository_InvalidUrl]: todo,\n                [Status.Failed_GitRepository_AuthFailed]: todo,\n                [Status.Failed_Unknown]: todo,\n                [Status.Succeeded]: done,\n            }\n            return status[props.status] || todo;\n        }\n    },\n    {\n        title: <>Download a <a href=\"https://github.com/icfpcontest2020?q=starterkit\" target=\"_blank\"\n                               rel=\"noopener noreferrer\">starter kit</a> for your language of choice</>,\n        status: props => props.haveSubmissions ? done : todo\n    },\n    {\n        title: <>If there's none, file an <a\n            href=\"https://github.com/icfpcontest2020/dockerfiles/issues/new?labels=new-platform&template=new-language-or-platform.md&title=Add+%5BLANGUAGE%5D\"\n            target=\"_blank\" rel=\"noopener noreferrer\">issue</a></>,\n        status: props => props.haveSubmissions ? done : todo\n    },\n    {\n        title: <>Commit and push the starter kit to <span className={ styles.branch }>submission</span></>,\n        status: props => props.haveSubmissions ? done : todo\n    },\n    {\n        title: 'Wait for your submission to appear below (<= 10 min)',\n        status: props => props.haveSubmissions ? done : todo\n    }\n]\n\nexport default function RegistrationChecklist(props: RegistrationChecklistProps) {\n    let isDelimiterShown = false\n    let isErrorShown = false\n\n    const errorSplit = props.errorMessage?.split('\\n');\n    const errorText = errorSplit && errorSplit.length > 1 ? errorSplit[1] : props.errorMessage\n    return (\n        <div className={ styles.root }>\n            <ul className={ styles.list }>\n                { items.map((item, i) => {\n                    const status = item.status(props)\n\n                    const doShowDelimiter = !isDelimiterShown && status !== done\n                    isDelimiterShown = isDelimiterShown || doShowDelimiter\n\n                    const isLastItem = i === items.length - 1;\n                    const doShowError = (!isErrorShown && status === fail)\n                        || (props.status === Status.Failed_Unknown && isLastItem)\n                    isErrorShown = isErrorShown || doShowError\n\n                    return [\n                        doShowDelimiter && (\n                            <li className={ styles.delimiter } key='delimiter'>YOU ARE HERE</li>\n                        ),\n                        <li key={ i }>{ status } { item.title }</li>,\n                        doShowError && props.errorMessage && (\n                            <li key='errorMessage'>\n                                <div className={ styles.error }>{ errorText }</div>\n                            </li>\n                        )\n                    ]\n                }) }\n            </ul>\n            { (props.status !== Status.Succeeded && props.status !== Status.Failed_GitRepository_NoBranch) && (\n                <ShowAndCopyForm name=\"Deploy key\" value={ props.deployKey } rows={ 9 }/>\n            ) }\n        </div>\n    )\n}\n","import RegistrationChecklist from './RegistrationChecklist';\nexport default RegistrationChecklist;\n","import SubmissionsPage from './SubmissionsPage';\nexport default SubmissionsPage;\n","import React from 'react';\nimport styles from './styles.module.css';\nimport Team from '../../models/Team';\nimport Submission, { SubmissionStatus } from '../../models/Submission';\nimport DateTime from '../DateTime';\nimport RegistrationChecklist from \"../RegistrationChecklist\";\n\ntype SubmissionsPageProps = {\n    team: Team | null;\n    submissions: Submission[] | null;\n    loadSubmissions: () => void;\n}\n\nexport default class SubmissionsPage extends React.Component<SubmissionsPageProps> {\n    componentDidMount() {\n        this.getSubmissions();\n    }\n\n    render() {\n        const { team, submissions } = this.props\n\n        if (!team) return null\n\n        return (\n            <div>\n                <h2>Submissions: { team.teamName }</h2>\n\n                { submissions && !submissions.some(i => i.status === SubmissionStatus.Succeeded) && (\n                    <div className={ styles.checklist }>\n                        <RegistrationChecklist deployKey={ team.deployKey }\n                                               haveSubmissions={ Boolean(submissions.length) }\n                                               { ...team.buildSystemRegistrationInfo } />\n                    </div>\n                ) }\n                \n                <p className={styles.help}>A successful submission should send a POST request after it's built and run. \n                    See any <a href='https://github.com/icfpcontest2020?q=starterkit' target='_blank' \n                               rel='noopener noreferrer'>starter kit</a> for an example.</p>\n\n                { this.renderSubmissions() }\n\n                { this.renderHelpMessage() }\n            </div>\n        )\n    }\n\n    renderSubmissions() {\n        const { submissions } = this.props;\n        return (\n            <table className={ styles.table }>\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Commit Message</th>\n                    <th>Created At</th>\n                    <th>Status</th>\n                    <th>Build</th>\n                    <th>Test</th>\n                </tr>\n                </thead>\n                <tbody>\n                { submissions && submissions.length === 0 && (\n                    <tr>\n                        <td colSpan={ 7 } style={ { textAlign: \"center\" } }>\n                            <p>No submissions yet.</p>\n                        </td>\n                    </tr>\n                ) }\n                { submissions && submissions.map(s => this.renderRow(s)) }\n                </tbody>\n            </table>\n        )\n    }\n\n    renderRow(s: Submission) {\n        const { team } = this.props;\n        const statusTexts: { [key: string]: string } = {\n            [SubmissionStatus.Failed_Build]: 'Build failed',\n            [SubmissionStatus.Failed_Test]: 'Test failed',\n            [SubmissionStatus.Failed_Unknown]: 'Failed',\n        }\n\n        const status = statusTexts[s.status] || s.status\n        const isFailed = status.toLowerCase().indexOf('failed') !== -1\n\n        return (\n            <tr key={ s.commitHash + s.createdAt }>\n                <td>{ s.commitHash?.substring(0, 6) }</td>\n                <td><span className={ styles.pre }>\n                    { s.branchName && <span className={ styles.branch }>[{ s.branchName }] </span> }\n                    { s.commitMessage }</span></td>\n                <td><DateTime dateStr={ s.createdAt }/></td>\n                <td className={ isFailed ? styles.statusFailed : '' }>{ status }</td>\n                <td>\n                    { s.buildLogKey && team &&\n                    <a target='_blank'\n                       rel=\"noopener nofollow noreferrer\"\n                       className={ styles.logLink }\n                       href={ `https://icfpc2020-api.testkontur.ru/logs/?logKey=${ encodeURIComponent(s.buildLogKey) }&apiKey=${ team.apiKey }` }>\n                        Log\n                    </a> }\n                </td>\n                <td>\n                    { s.testLogKey && team &&\n                    <a target='_blank'\n                       rel=\"noopener nofollow noreferrer\"\n                       className={ styles.logLink }\n                       href={ `https://icfpc2020-api.testkontur.ru/logs/?logKey=${ encodeURIComponent(s.testLogKey) }&apiKey=${ team.apiKey }` }>\n                        Log\n                    </a> }\n                </td>\n            </tr>\n        )\n    }\n\n    renderHelpMessage() {\n        return (\n            <div className={ styles.help }>\n                <p>Please note that the <code className={styles.branch}>[submission]</code> branch is required.</p> \n                <p>If you need assistance,\n                    please read the <a href=\"https://github.com/icfpcontest2020/dockerfiles/blob/master/README.md\"\n                                       target=\"_blank\" rel=\"noopener noreferrer\">submission rules</a>,\n                    then file an <a\n                    href=\"https://github.com/icfpcontest2020/dockerfiles/issues/new?labels=submissions&template=submissions.md&title=Submissions%3A+\"\n                    target=\"_blank\" rel=\"noopener noreferrer\">issue</a>.\n                </p>\n            </div>\n        )\n    }\n\n    getSubmissions = () => {\n        this.props.loadSubmissions();\n    }\n}\n","import { LOAD_SUBMISSIONS, UPDATE_LAST_SEEN_SUBMISSION } from '../consts/actions';\nimport Submission from '../models/Submission';\nimport { ThunkAction } from 'redux-thunk';\nimport IStore from '../models/store';\nimport { Dispatch } from 'redux';\nimport ISubmissionsAction from '../models/actions/submissions';\nimport { sendGetRequest } from '../utils/sendRequest';\nimport { submissions } from '../consts/api';\nimport { createSetErrorAction } from './app';\nimport createQueryString from '../utils/createQueryString';\n\nconst createLoadSubmissionsAction = (submissions: Submission[]) => ({\n    type: LOAD_SUBMISSIONS,\n    payload: submissions,\n})\nconst createUpdateLastSeenSubmissionAction = (submissionId: string | null) => ({\n    type: UPDATE_LAST_SEEN_SUBMISSION,\n    payload: submissionId,\n})\n\nexport function loadSubmissions():\n    ThunkAction<Promise<any>, IStore, unknown, ISubmissionsAction> {\n    return async (dispatch: Dispatch, getState: () => IStore) => {\n        const store = getState();\n        const apiKey = store.team.apiKey;\n        const requestUrl = `${ submissions }?${ createQueryString({ apiKey }) }`\n        try {\n            const teamSubmissions = await sendGetRequest(requestUrl);\n            dispatch(createLoadSubmissionsAction(teamSubmissions));\n        } catch (e) {\n            dispatch(createSetErrorAction(e))\n        }\n    }\n}\n\nexport function updateLastSeenSubmission(action: { payload: string | null }):\n    ThunkAction<void, IStore, unknown, ISubmissionsAction> {\n    return (dispatch: Dispatch) => {\n        dispatch(createUpdateLastSeenSubmissionAction(action.payload))\n    }\n}\n","import { connect } from 'react-redux';\nimport SubmissionsPage from '../components/SubmissionsPage';\nimport IStore from '../models/store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { loadSubmissions, updateLastSeenSubmission } from '../actions/submissions';\nimport createEmptyAction from '../utils/createEmptyAction';\n\nconst mapState = (store: IStore) => {\n    return {\n        team: store.team.team,\n        submissions: store.submissions.submissions,\n    }\n}\n\nconst mapDispatch = (dispatch: ThunkDispatch<IStore, unknown, AnyAction>) => {\n    return {\n        loadSubmissions: () => dispatch(loadSubmissions()),\n        updateLastSeenSubmission: (id: string) => dispatch(updateLastSeenSubmission(createEmptyAction(id)))\n    }\n}\n\n\nexport default connect(mapState, mapDispatch)(SubmissionsPage);\n","import React from 'react';\nimport styles from './styles.module.css';\nimport './flag-icons.css';\nimport Team from '../../models/Team';\nimport { IProblemDescription, IProblemScoreboardTeam } from '../../models/actions/scoreboard';\nimport countriesJson from '../../consts/countries.json';\nimport ICountry from '../../models/Country';\nimport DateTime from '../DateTime';\nimport { formatter } from \"../DateTime/DateTime\";\n\ninterface ScoreboardPageProps {\n    team: Team | null;\n    frozenAt?: Date;\n    scoreByTeams: IProblemScoreboardTeam[] | null;\n    problems: IProblemDescription[] | null;\n    loadProblemScoreboard: () => void;\n}\n\nenum SortDirection {\n    increase = 'increase',\n    decrease = 'decrease',\n}\n\ninterface ScoreboardPageState {\n    sortBy: string;\n    sortDirection: SortDirection;\n}\n\nconst countries = countriesJson as ICountry[];\n\nexport default class ScoreboardPage extends React.Component<ScoreboardPageProps, ScoreboardPageState> {\n    state = {\n        sortBy: 'general',\n        sortDirection: SortDirection.decrease,\n    }\n\n    componentDidMount() {\n        this.props.loadProblemScoreboard();\n    }\n\n    render() {\n        const { sortBy, sortDirection } = this.state;\n        const { team, scoreByTeams } = this.props;\n\n        const teamsOrder = scoreByTeams && [...scoreByTeams].sort(sortElements(sortBy, sortDirection));\n\n        return (\n            <div>\n                <h2>Scoreboard{ team && ': ' + team.teamName }</h2>\n\n                <table className={ styles.table }>\n                    <thead>\n                    { this.renderHead() }\n                    { teamsOrder && teamsOrder\n                        .map((team: IProblemScoreboardTeam, i: number) => ({ team, i }))\n                        .filter(tuple => tuple.team.team.teamId === team?.teamId && tuple.i > 5)\n                        .map(tuple => this.renderRow(tuple.team, tuple.i))\n                    }\n                    </thead>\n                    <tbody>\n                    { teamsOrder && teamsOrder.map(this.renderRow) }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    renderHead() {\n        const { problems } = this.props;\n        const { sortBy, sortDirection } = this.state;\n        const hasProblems = problems && problems.length > 0;\n        const rowSpan = hasProblems ? 2 : 1;\n\n        const buttonClass = `${ styles.sortButton } ${ sortBy === 'general'\n            ? sortDirection === SortDirection.decrease ? styles.sortDown : styles.sortUp\n            : '' }`\n\n        return (\n            <>\n            <tr>\n                <th style={ { width: 40 } } rowSpan={ rowSpan }>#</th>\n                <th style={ { width: 40 } } rowSpan={ rowSpan }>&nbsp;</th>\n                <th rowSpan={ rowSpan } className={ styles.alignLeft }>Team</th>\n                { problems && problems.length &&\n                <th colSpan={ problems.length } className={ styles.problemsHeader }>Solved Problems</th>\n                }\n                <th style={ { width: 70 } }\n                    className={ styles.score }\n                    rowSpan={ rowSpan }>\n                    <button className={ buttonClass }\n                            onClick={ this.changeSorted('general') }>\n                        Score\n                    </button>\n                </th>\n                <th rowSpan={ rowSpan }>Earned At</th>\n            </tr>\n            { problems && problems.length &&\n            <tr>\n                { problems.map(this.cellForProblem) }\n            </tr>\n            }\n            </>\n        )\n    }\n\n    cellForProblem = (problem: IProblemDescription) => {\n        const { sortBy, sortDirection } = this.state;\n        let text = problem.problemId;\n        if (text === 'request') {\n            text = 'R';\n        }\n        if (text === 'submission') {\n            text = 'T';\n            problem.description = 'Made submission passed the test'\n        }\n        if (text.startsWith('tutorial')) {\n            text = text.replace('tutorial:', '');\n        }\n        const buttonClass = `${ styles.sortButton } ${ sortBy === problem.problemId\n            ? sortDirection === SortDirection.decrease ? styles.sortDown : styles.sortUp\n            : '' }`\n\n        return (\n            <th key={ problem.problemId }\n                className={ styles.alignRight }\n                title={ problem.description }>\n                <button onClick={ this.changeSorted(problem.problemId) }\n                        className={ buttonClass }>\n                    { text }\n                </button>\n            </th>\n        )\n    }\n\n    renderRow = (scoreboardTeam: IProblemScoreboardTeam, index: number) => {\n        const { team, problems } = this.props;\n        if (!problems) {\n            return null;\n        }\n\n        const teamInfo = scoreboardTeam.team\n        const itemCountry = teamInfo.customData.country;\n        const country = countries.find(c => c.value === itemCountry);\n        return (\n            <tr key={ index } className={ team?.teamId === teamInfo.teamId ? styles.activeTeam : '' }>\n                <td className={ styles.alignCenter }>{ index + 1 }</td>\n                <td>\n                    <span className={ `flag-icons ${ country?.shortValue }` }\n                          title={ country?.text } />\n                </td>\n                <td>{ teamInfo.teamName }</td>\n                { problems.map(p =>\n                    <td key={ p.problemId }\n                        className={ styles.problemScore }\n                        title={ p.problemId in scoreboardTeam.problems\n                            ? `Solved at ${ formatter.format(new Date(scoreboardTeam.problems[p.problemId].solvedAt)) }` : undefined }>\n                        { p.problemId in scoreboardTeam.problems\n                            ? scoreboardTeam.problems[p.problemId].score\n                            : <span className={ styles.lighten }>·</span> }\n                    </td>\n                ) }\n                <td className={ styles.score }>{ scoreboardTeam.score }</td>\n                <td className={ styles.alignRight }><DateTime dateStr={ scoreboardTeam.solvedAt }/>\n                </td>\n            </tr>\n        )\n    }\n\n    changeSorted = (sortBy: string) => () => {\n        if (sortBy === this.state.sortBy) {\n            const sortDirection = this.state.sortDirection === SortDirection.decrease\n                ? SortDirection.increase\n                : SortDirection.decrease\n            this.setState({ sortDirection })\n            return;\n        }\n        this.setState({ sortBy, sortDirection: SortDirection.decrease })\n    }\n}\n\nfunction sortElements(sortBy: string, sortDirection: SortDirection) {\n    return (a: IProblemScoreboardTeam, b: IProblemScoreboardTeam) => {\n        let aScore, bScore;\n        if (sortBy === 'general') {\n            aScore = { score: a.score, solvedAt: a.solvedAt };\n            bScore = { score: b.score, solvedAt: b.solvedAt };\n        } else {\n            const aProblem = a.problems[sortBy];\n            const bProblem = b.problems[sortBy];\n            aScore = aProblem || { score: 0, solvedAt: new Date(0) }\n            bScore = bProblem || { score: 0, solvedAt: new Date(0) }\n        }\n\n        if (sortDirection === SortDirection.decrease) {\n            if (aScore.score > bScore.score) return -1;\n            if (aScore.score < bScore.score) return 1;\n            if (aScore.solvedAt < bScore.solvedAt) return -1;\n            if (aScore.solvedAt > bScore.solvedAt) return 1;\n            return 0;\n        }\n\n        if (aScore.score < bScore.score) return -1;\n        if (aScore.score > bScore.score) return 1;\n        if (aScore.solvedAt > bScore.solvedAt) return -1;\n        if (aScore.solvedAt < bScore.solvedAt) return 1;\n        return 0;\n    }\n}\n","import ScoreboardPage from './ScoreboardPage';\nexport default ScoreboardPage;\n","import { LOAD_PROBLEM_SCOREBOARD } from '../consts/actions';\nimport IScoreboardAction, {\n    IProblemDescription, IProblemScoreboardTeam,\n    IScoreboardFromServer\n} from '../models/actions/scoreboard';\nimport { ThunkAction } from 'redux-thunk';\nimport IStore from '../models/store';\nimport { Dispatch } from 'redux';\nimport { createSetErrorAction } from './app';\nimport { sendGetRequest } from '../utils/sendRequest';\nimport { problemsScoreboard } from '../consts/api';\n\nconst createLoadProblemScoreboardAction = (scoreboard: {\n    problemDescription: IProblemDescription[];\n    teams: IProblemScoreboardTeam[];\n    frozenAt?: Date;\n}) => ({\n    type: LOAD_PROBLEM_SCOREBOARD,\n    payload: scoreboard,\n})\n\n\nexport function loadProblemScoreboard():\n    ThunkAction<Promise<any>, IStore, unknown, IScoreboardAction> {\n    return async (dispatch: Dispatch) => {\n        try {\n            const result: IScoreboardFromServer = await sendGetRequest(problemsScoreboard)\n            \n            dispatch(createLoadProblemScoreboardAction({\n                problemDescription: result.problems,\n                frozenAt: result.frozenAt ? new Date(result.frozenAt) : undefined,\n                teams: result.teams,\n            }))\n        } catch (e) {\n            dispatch(createSetErrorAction(e))\n        }\n    }\n}\n","import { connect } from 'react-redux';\nimport ScoreboardPage from '../components/ScoreboardPage';\nimport IStore from '../models/store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { loadProblemScoreboard } from '../actions/scoreboard';\n\nconst mapState = (store: IStore) => {\n    return {\n        team: store.team.team,\n        scoreByTeams: store.scoreboard.teams,\n        frozenAt: store.scoreboard.frozenAt,\n        problems: store.scoreboard.problemDescription,\n    }\n}\n\nconst mapDispatch = (dispatch: ThunkDispatch<IStore, unknown, AnyAction>) => {\n    return {\n        loadProblemScoreboard: () => dispatch(loadProblemScoreboard()),\n    }\n}\n\n\nexport default connect(mapState, mapDispatch)(ScoreboardPage);\n","import Tabs from './Tabs';\nexport default Tabs;\n","import React from 'react';\nimport styles from './styles.module.css';\nimport { RouteComponentProps, Link } from 'react-router-dom';\n\ninterface TabsProps {\n    tabs: {\n        hash: string;\n        text: string;\n    }[];\n    location: RouteComponentProps['location'];\n}\n\nexport default function Tabs(props: TabsProps) {\n    const hash = props.location.hash;\n    return (\n        <nav className={ styles.root }>\n            <ul className={ styles.list }>\n                { props.tabs.map(tab =>\n                    <li className={ styles.listItem } key={ tab.text }>\n                        <Link to={ tab.hash }\n                              className={ styles.link + (hash === tab.hash ? ' ' + styles.active : '') }\n                        >{ tab.text }</Link>\n                    </li>\n                ) }\n            </ul>\n        </nav>\n    )\n}\n","import BlogPost from './BlogPost';\nexport default BlogPost;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport styles from './styles.module.css';\nimport { Link } from 'react-router-dom';\nimport { ROUTES } from '../../consts/routes';\n\ntype BlogPostProps = {\n    id: number,\n    title: string,\n    date: string,\n    author: string,\n    text: string,\n    isInList: boolean\n}\n\nexport default function BlogPost(props: BlogPostProps) {\n    const { title, date, author, text, isInList, id } = props;\n    const intl = new Intl.DateTimeFormat('en-GB', {\n        timeZoneName: 'short',\n        hour: 'numeric',\n        minute: '2-digit',\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n    })\n\n\n    return (\n        <article className={ styles.root + ' container' }>\n            <header className={ styles.header }>\n                { renderTitle(isInList, title, id) }\n                <div className={ styles.subtitle }>\n                    <time>{ intl.format(new Date(date)) }</time>\n                    , by { author }\n                </div>\n            </header>\n            <ReactMarkdown linkTarget='_blank' escapeHtml={false} source={ text }/>\n        </article>\n    )\n}\n\nfunction renderTitle(isInList: boolean, titleText: string, id: number) {\n    if (!isInList) {\n        return <h2 className={ styles.title }>{ titleText }</h2>\n    }\n\n    return <h3 className={ styles.title }><Link to={ `${ ROUTES.post }/${ id }` }>{ titleText }</Link></h3>\n}\n","import React from 'react';\nimport styles from './styles.module.css';\nimport IBlogPost from '../../models/IBlogPost';\nimport BlogPost from '../BlogPost';\n\ninterface BlogListProps {\n    posts: IBlogPost[];\n}\n\nexport default function BlogList(props: BlogListProps) {\n    return (\n        <main className={styles.root}>\n            { props.posts.map(item =>\n                <div className={ styles.listItem } key={ item.id }>\n                    <BlogPost { ...item } isInList/>\n                </div>\n            ) }\n        </main>\n    )\n}\n","import React from 'react';\nimport { blogTabs } from '../../consts/routes';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Tabs from '../Tabs';\nimport BlogList from './BlogList';\nimport astronomerPosts from '../../astronomerPosts.json';\nimport orgsPosts from '../../orgsPosts.json';\n\ninterface BlogPageProps {\n    location: RouteComponentProps['location'];\n}\n\nconst tabs = [\n    { text: 'Contest Updates', hash: blogTabs.orgs },\n    { text: 'Pegovka', hash: blogTabs.pegovka },\n]\n\nexport default function BlogPage(props: BlogPageProps) {\n    const { location } = props;\n    const hash = location.hash;\n    return (\n        <div>\n            <Tabs tabs={ tabs } location={ location }/>\n            <BlogList posts={hash === blogTabs.orgs ? orgsPosts : astronomerPosts} />\n        </div>\n    )\n}\n","import BlogPage from './BlogPage';\nexport default BlogPage;\n","import BlogPostPage from './BlogPostPage';\nexport default BlogPostPage;\n","import React from 'react';\nimport astronomerPosts from '../../astronomerPosts.json';\nimport orgsPosts from '../../orgsPosts.json';\nimport BlogPost from '../BlogPost';\nimport styles from './styles.module.css';\nimport { Link } from 'react-router-dom';\nimport { ROUTES } from '../../consts/routes';\n\ntype BlogPostPageProps = {\n    match: {\n        params: {\n            postId: string;\n        }\n    }\n}\n\nexport default function BlogPostPage(props: BlogPostPageProps) {\n    const { postId } = props.match.params;\n    const astronomerPostIndex = astronomerPosts.findIndex(elem => elem.id === parseInt(postId, 10));\n    const orgsPostIndex = orgsPosts.findIndex(elem => elem.id === parseInt(postId, 10));\n    \n    if (astronomerPostIndex === -1 && orgsPostIndex === -1) {\n        return (\n            <p>404: Post Not Found</p>\n        )\n    }\n    \n    const postIndex = astronomerPostIndex !== -1 ? astronomerPostIndex : orgsPostIndex;\n    const posts = astronomerPostIndex !== -1 ? astronomerPosts : orgsPosts;\n\n    const currentPost = posts[postIndex];\n    const nextPost = postIndex > 0 && posts[postIndex - 1];\n    const prevPost = postIndex < posts.length - 1 && posts[postIndex + 1];\n\n    return (\n        <div className={ styles.root }>\n            <BlogPost { ...currentPost } isInList={ false }/>\n            <footer className={ styles.footer + ' container' }>\n                <div className={ styles.footerItem }>\n                    { prevPost &&\n                    <>Prev: <Link to={ `${ ROUTES.post }/${ prevPost.id }` }>{ prevPost.title }</Link></>\n                    }\n                </div>\n                <div className={ styles.footerItem }>\n                    { nextPost &&\n                    <>Next: <Link to={ `${ ROUTES.post }/${ nextPost.id }` }>{ nextPost.title }</Link></>\n                    }\n                </div>\n            </footer>\n        </div>\n    )\n}\n\n\n","import React, { ReactComponentElement } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport LandingPage from '../Landing/LandingPage';\nimport { ROUTES } from '../../consts/routes';\nimport RulesPage from '../RulesPage';\nimport RegistrationPage from '../../containers/Registration';\nimport LoginPage from '../../containers/Login';\nimport Team from '../../models/Team';\nimport TeamInfoPage from '../../containers/TeamInfo';\nimport SubmissionsPage from '../../containers/Submissions';\nimport ScoreboardPage from '../../containers/Scoreboard';\nimport BlogPage from '../BlogPage';\nimport BlogPostPage from '../BlogPostPage';\n\ntype AppRouterProps = {\n    team: Team | null;\n    isTeamLoading: boolean;\n}\n\nexport default function AppRouter(props: AppRouterProps) {\n    const { team, isTeamLoading } = props;\n    return (\n        <Switch>\n            <Route exact path='/' component={ LandingPage }/>\n            <Route path={ ROUTES.rules } component={ RulesPage }/>\n            <Route path={ ROUTES.registration } children={ () => {\n                const component = <RegistrationPage/>;\n                return forUnauthorized(team, component)\n            } }/>\n            <Route path={ ROUTES.login } children={ () => {\n                const component = <LoginPage/>;\n                return forUnauthorized(team, component)\n            } }/>\n            <Route path={ ROUTES.teamInfo } children={ () => {\n                const component = <TeamInfoPage/>;\n                return forAuthorized(team, isTeamLoading, component);\n            } }/>\n            <Route path={ ROUTES.submissions } children={ () => {\n                const component = <SubmissionsPage/>;\n                return forAuthorized(team, isTeamLoading, component);\n            } }/>\n            <Route path={ ROUTES.scoreboard } component={ ScoreboardPage }/>\n            <Route path={ ROUTES.blog } component={ BlogPage }/>\n            <Route path={ `${ROUTES.post}/:postId` } component={ BlogPostPage }/>\n        </Switch>\n    )\n}\n\nfunction forUnauthorized(team: Team | null, component: ReactComponentElement<any>) {\n    if (team) {\n        return <Redirect to={ ROUTES.submissions }/>\n    }\n    return component;\n}\n\n\nfunction forAuthorized(team: Team | null, loading: boolean, component: ReactComponentElement<any>) {\n    if (!team && !loading) {\n        return <Redirect to={ ROUTES.login }/>\n    }\n\n    if (!team) {\n        return null;\n    }\n\n    return component;\n}\n","import {HubConnectionBuilder, LogLevel} from \"@microsoft/signalr\";\nimport {events} from \"../consts/api\";\nimport {uuid} from \"uuidv4\";\nimport createQueryString from './createQueryString';\n\nexport interface IListener {\n    close: () => void;\n    subscribe: (eventType: EventType) => void;\n    unsubscribe: (eventType: EventType) => void;\n}\n\nexport enum EventType {\n    Submission = 'Submission',\n    Scoreboard = 'Scoreboard',\n    LightningScoreboard = 'LightningScoreboard',\n    NonRatingGame = 'NonRatingGame',\n    Team = 'Team',\n}\n\nexport enum SubmissionChangeType {\n    Added = 'Added',\n    BuildStatusChanged = 'BuildStatusChanged',\n    Activated = 'Activated',\n    TestStatusChanged = 'TestStatusChanged',\n}\n\nexport enum NonRatingGameChangeType {\n    Added = 'Added',\n    Finished = 'Finished',\n}\n\nexport enum TeamChangeType {\n    Updated = 'Updated',\n    Activated = 'Activated',\n    Deactivated = 'Deactivated'\n}\n\nexport interface ISubmissionChangedEventData {\n    submissionId: number;\n    changeType: SubmissionChangeType;\n}\n\nexport interface INonRatingGameChangedEventData {\n    gameId: string;\n    changeType: NonRatingGameChangeType;\n}\n\nexport interface ITeamChangedEventData {\n    changeType: TeamChangeType;\n}\n\nexport interface IScoreboardChangedEventData {\n    tournamentId: number;\n}\n\nexport interface ILightningScoreboardChangedEventData {\n    problemId: string;\n    teamId: string;\n}\n\nexport default function listenEvents(apiKey: string, handler: (eventType: EventType, payload: any) => void): IListener {\n\n    let subscribedEventTypes: { [key: string]: boolean } = {};\n    let closed = false;\n    let connected = false;\n    const requestUrl = `${events}?${createQueryString({sticky: uuid(), apiKey: apiKey})}`\n\n    const connection = new HubConnectionBuilder()\n        .withUrl(requestUrl)\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n    connection.onclose(async () => {\n        console.log(\"closed\");\n        connected = false;\n        if (!closed)\n            setTimeout(() => start(), 10000);\n    });\n\n    connection.on(\"onEvent\", (eventType, payload) => {\n        if (closed)\n            return;\n        console.log(eventType, payload);\n        handler(eventType, payload);\n    });\n\n    async function start() {\n        if (closed)\n            return;\n\n        try {\n            await connection.start();\n            connected = true;\n            console.log(\"connected\");\n        } catch (err) {\n            console.log(\"failed to start\", err);\n            setTimeout(() => start(), 10000);\n            return;\n        }\n\n        await updateSubscription();\n    }\n\n    async function stop() {\n        try {\n            await connection.stop();\n        } catch (err) {\n            console.log(\"failed to stop\", err);\n        }\n    }\n\n    async function updateSubscription() {\n        try {\n            let eventTypes = Object.entries(subscribedEventTypes).filter(x => x[1]).map(x => x[0]);\n            if (eventTypes.length)\n                await connection.send(\"subscribe\", eventTypes.join(\",\"));\n            else\n                await connection.send(\"subscribe\", 0);\n            console.log(\"subscribed\", eventTypes);\n        } catch (err) {\n            console.log(\"failed to subscribe\", err);\n            await stop();\n        }\n    }\n\n    start();\n\n    return {\n        close: function () {\n            closed = true;\n            stop();\n        },\n        subscribe: function (eventType: EventType) {\n            subscribedEventTypes[eventType] = true;\n            if (connected)\n                updateSubscription();\n        },\n        unsubscribe: async function (eventType: EventType) {\n            subscribedEventTypes[eventType] = false;\n            if (connected)\n                updateSubscription();\n        }\n    };\n}\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport styles from './styles.module.css';\nimport Header from '../Header';\nimport Team from '../../models/Team';\nimport { API_KEY } from '../../consts/strings';\nimport Error from '../Error'\nimport AppRouter from './AppRouter';\nimport listenEvents, { EventType, IListener } from '../../utils/eventsListener';\n\n\ninterface AppProps {\n    apiKey: string | null;\n    team: Team | null;\n    error: Error | string | null;\n    updateApiKey: (apiKey: string | null) => void;\n    updateTeam: (team: Team | null) => void;\n    loadTeam: () => void;\n    setError: (err: Error | string | null) => void;\n    loadSubmissions: () => void;\n    loadLightningScoreboard: () => void;\n}\n\ninterface AppState {\n    hasApiKey: boolean;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    private listener?: IListener;\n    \n    constructor(props: AppProps) {\n        super(props);\n\n        let apiKey = getApiKey();\n        this.state = {\n            hasApiKey: Boolean(apiKey),\n        }\n    }\n\n    componentDidMount() {\n        let apiKey = getApiKey();\n\n        if (!apiKey) return;\n\n        this.props.updateApiKey(apiKey);\n        this.props.loadTeam();\n    }\n\n    componentWillUnmount() {\n        this.listener && this.listener.close();\n    }\n    \n    componentDidUpdate(prevProps: Readonly<AppProps>) {\n        const addTeam = !prevProps.team && Boolean(this.props.team);\n        const delTeam = Boolean(prevProps.team) && !this.props.team;\n        \n        if (delTeam) {\n            this.listener && this.listener.close();\n        }\n        if (addTeam) {\n            this.addListeners();\n        }\n    }\n\n    render() {\n        const { hasApiKey } = this.state;\n        const { team, error } = this.props;\n\n        const loading = hasApiKey && !team;\n        return (\n            <>\n                <div className={ styles.container }>\n                    <Router>\n                        <Header team={ team }\n                                isTeamLoading={ loading }\n                                logout={ this.deleteApiKey }/>\n                        <AppRouter team={ team }\n                                   isTeamLoading={ loading }\n                        />\n                    </Router>\n                </div>\n                { error !== null && <Error error={ error } closeError={ this.closeError }/> }\n            </>\n        );\n    }\n\n\n    deleteApiKey = () => {\n        try {\n            const storageApiKey = window.localStorage.getItem(API_KEY);\n            if (storageApiKey === this.props.apiKey) {\n                window.localStorage.removeItem(API_KEY);\n            }\n        } catch (e) {\n            /*...*/\n        }\n\n        this.setState({ hasApiKey: false });\n        this.props.updateApiKey(null);\n        this.props.updateTeam(null);\n    }\n\n    closeError = () => {\n        this.props.setError(null);\n    }\n    \n    addListeners() {\n        if (!this.props.apiKey) return;\n        \n        this.listener = listenEvents(this.props.apiKey, (eventType, payload) => {\n            if (!payload) return;\n            switch (eventType) {\n                case EventType.Submission:\n                    return this.props.loadSubmissions();\n                case EventType.Team:\n                    return this.props.loadTeam();\n                case EventType.LightningScoreboard:\n                    return this.props.loadLightningScoreboard();\n            }\n        })\n        \n        this.listener.subscribe(EventType.Submission);\n        this.listener.subscribe(EventType.Team);\n        this.listener.subscribe(EventType.LightningScoreboard);\n    }\n}\n\nexport default App;\n\nfunction getQueryParams() {\n    return window.location.hash\n        .replace(/#\\/[^?]*\\?/, '')\n        .split('&')\n        .map(i => i.split('='))\n        .reduce((acc, item) => {\n            acc[item[0]] = item[1];\n            return acc;\n        }, {} as { [key: string]: string });\n}\n\nfunction getApiKey() {\n    let apiKey;\n    try {\n        const urlParams = getQueryParams();\n\n        if (urlParams[API_KEY]) {\n            apiKey = urlParams[API_KEY];\n            window.localStorage.setItem(API_KEY, apiKey);\n        } else {\n            apiKey = window.localStorage.getItem(API_KEY);\n        }\n    } catch (e) {\n        /*...*/\n    }\n\n    return apiKey;\n}\n","import App from './App';\nexport default App;\n","import { connect } from 'react-redux';\nimport App from '../components/App';\nimport { loadTeam, updateApiKey, updateTeam } from '../actions/team';\nimport createEmptyAction from '../utils/createEmptyAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport IStore from '../models/store';\nimport Team from '../models/Team';\nimport { setErrorAction } from '../actions/app';\nimport { AnyAction } from 'redux';\nimport { loadSubmissions, updateLastSeenSubmission } from '../actions/submissions';\nimport { loadProblemScoreboard } from '../actions/scoreboard';\n\n\nconst mapState = (state: IStore) => {\n    return {\n        apiKey: state.team.apiKey,\n        team: state.team.team,\n        lastSubmission: state.submissions.lastSeen,\n        error: state.app.error,\n    }\n}\n\nconst mapDispatch = (dispatch: ThunkDispatch<IStore, unknown, AnyAction>) => {\n    return {\n        updateApiKey: (apiKey: string | null) => dispatch(updateApiKey(createEmptyAction(apiKey))),\n        updateTeam: (team: Team | null) => dispatch(updateTeam(createEmptyAction(team))),\n        loadTeam: () => dispatch(loadTeam()),\n        setError: (err: string | Error | null) => dispatch(setErrorAction(createEmptyAction(err))),\n        loadSubmissions: () => dispatch(loadSubmissions()),\n        updateLastSeenSubmission: (id: string | null) => dispatch(updateLastSeenSubmission(createEmptyAction(id))),\n        loadLightningScoreboard: () => dispatch(loadProblemScoreboard()),\n    }\n}\n\nexport default connect(mapState, mapDispatch)(App);\n","import IAppStore from '../models/store/app';\nimport IAppActions from '../models/actions/app';\nimport { SET_ERROR } from '../consts/actions';\n\nconst defaultStore: IAppStore ={\n    error: null,\n}\n\nfunction appReducer(store = defaultStore, action: IAppActions) {\n    switch (action.type) {\n        case SET_ERROR: \n            return {\n                ...store,\n                error: action.payload,\n            }\n        default:\n            return store;\n    }\n}\n\nexport default appReducer;\n","import { FINISH, LOAD_TEAM, START, UPDATE_API_KEY, UPDATE_TEAM } from '../consts/actions';\nimport ITeamAction from '../models/actions/team';\nimport ITeamStore from '../models/store/team';\n\nconst defaultState: ITeamStore = {\n    apiKey: null,\n    team: null,\n    teamLoading: false,\n}\n\n\nfunction teamReducer(state = defaultState, action: ITeamAction) {\n    switch (action.type) {\n        case UPDATE_API_KEY:\n            return {\n                ...state,\n                apiKey: action.payload,\n            };\n        case UPDATE_TEAM:\n            return {\n                ...state,\n                team: action.payload,\n            };\n        case LOAD_TEAM + START:\n            return {\n                ...state,\n                teamLoading: true,\n            }\n        case LOAD_TEAM + FINISH:\n            return {\n                ...state,\n                teamLoading: false,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default teamReducer;\n","import ISubmissionsStore from '../models/store/submissions';\nimport ISubmissionsAction from '../models/actions/submissions';\nimport { LOAD_SUBMISSIONS, UPDATE_LAST_SEEN_SUBMISSION } from '../consts/actions';\n\nconst defaultStore: ISubmissionsStore ={\n    submissions: null,\n    lastSeen: null,\n}\n\nfunction submissionsReducer(store = defaultStore, action: ISubmissionsAction) {\n    switch (action.type) {\n        case LOAD_SUBMISSIONS:\n            return {\n                ...store,\n                submissions: action.payload,\n            };\n        case UPDATE_LAST_SEEN_SUBMISSION:\n            return {\n                ...store,\n                lastSeen: action.payload,\n            }\n        default:\n            return store;\n    }\n}\n\nexport default submissionsReducer;\n","import IScoreboardStore from '../models/store/scoreboard';\nimport IScoreboardAction from '../models/actions/scoreboard';\nimport { LOAD_PROBLEM_SCOREBOARD } from '../consts/actions';\n\nconst defaultStore: IScoreboardStore ={\n    problemDescription: null,\n    teams: null,\n}\n\nfunction scoreboardReducer(store = defaultStore, action: IScoreboardAction) {\n    switch (action.type) {\n        case LOAD_PROBLEM_SCOREBOARD:\n            return {\n                ...store,\n                problemDescription: action.payload.problemDescription,\n                teams: action.payload.teams,\n                frozenAt: action.payload.frozenAt\n            }\n        default:\n            return store;\n    }\n}\n\nexport default scoreboardReducer;\n","import { combineReducers } from \"redux\";\nimport app from './app';\nimport team from './team';\nimport submissions from './submissions';\nimport scoreboard from './scoreboard';\n\nconst rootReducer = combineReducers({\n    app,\n    team, \n    submissions,\n    scoreboard,\n})\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport './fonts.css';\nimport './index.css';\nimport App from './containers/App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2xfq7\",\"subtitle\":\"styles_subtitle__3h6J1\",\"audiences\":\"styles_audiences__19Dt0\",\"audiences__emoji\":\"styles_audiences__emoji__14Rms\",\"audiences__scope\":\"styles_audiences__scope__3mOb8\",\"timer\":\"styles_timer__2AN8b\",\"timer__download\":\"styles_timer__download__2TgKw\",\"section\":\"styles_section__3heFa\",\"section__title\":\"styles_section__title__g5_Gi\",\"section__cta\":\"styles_section__cta__2Ajtu\",\"features\":\"styles_features__2ceUO\",\"features__double\":\"styles_features__double__58VQ0\",\"features__emoji\":\"styles_features__emoji__Se29P\",\"features__title\":\"styles_features__title__6TdBU\",\"features__pro\":\"styles_features__pro__2v0M3\",\"demos\":\"styles_demos__SQAUW\",\"tweet\":\"styles_tweet__1TlJk\",\"videos\":\"styles_videos__Hy-LD\",\"thanks\":\"styles_thanks__14zDs\",\"thanks__title\":\"styles_thanks__title__1SWZB\",\"thanks__script\":\"styles_thanks__script__2XAoZ\",\"supporters\":\"styles_supporters__2at3v\",\"supporters__title\":\"styles_supporters__title__39ocH\",\"supporters__script\":\"styles_supporters__script__b6DMP\",\"video\":\"styles_video__1EF-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checklist\":\"styles_checklist__2EPJ5\",\"table\":\"styles_table__1V-km\",\"pre\":\"styles_pre__sSo32\",\"statusFailed\":\"styles_statusFailed__Tnzla\",\"logLink\":\"styles_logLink__1LR70\",\"branch\":\"styles_branch__1zqjP\",\"help\":\"styles_help__1bSOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2e9Hh\",\"subtitle\":\"styles_subtitle__Cnbu2\",\"note\":\"styles_note__3GPDT\",\"blink\":\"styles_blink__1lnWj\",\"links\":\"styles_links__21dbQ\",\"link\":\"styles_link__3vf9Z\",\"activeLink\":\"styles_activeLink__3cx_h\",\"titleLink\":\"styles_titleLink__3mE_7\",\"logoutLink\":\"styles_logoutLink__1fnhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2z-C9\",\"list\":\"styles_list__2XWI6\",\"delimiter\":\"styles_delimiter__1YCz8\",\"branch\":\"styles_branch__3X0Tq\",\"error\":\"styles_error__1Ab1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"forms_form__3YnzN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1yrlt\",\"list\":\"styles_list__3I-q0\",\"listItem\":\"styles_listItem__1gwLr\",\"link\":\"styles_link__2wKUa\",\"active\":\"styles_active__3YV-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1fIrI\",\"title\":\"styles_title__3Gvai\",\"subtitle\":\"styles_subtitle__356-R\",\"header\":\"styles_header__Gm18o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"styles_row__1BPlo\",\"buttonRow\":\"styles_buttonRow__1LLhO\",\"blackText\":\"styles_blackText__1nUbW\",\"error\":\"styles_error__7j77G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__BUQrS\",\"footer\":\"styles_footer__OF_kJ\",\"footerItem\":\"styles_footerItem__JxyTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__q7V3z\",\"box\":\"styles_box__4f_RE\",\"error\":\"styles_error__35IO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__2Ebhh\",\"row\":\"styles_row__3N1E7\",\"buttonRow\":\"styles_buttonRow__3VxaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2DNLe\",\"disclaimer\":\"styles_disclaimer__40iq-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"styles_listItem__2Glde\",\"root\":\"styles_root__1b49X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__fAA0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2cSWM\",\"value\":\"styles_value__2NNr2\",\"form\":\"styles_form__3ly6z\",\"row\":\"styles_row__2sZ9r\",\"buttonRow\":\"styles_buttonRow__26sw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1Tz1F\",\"delimiter\":\"styles_delimiter__zRs7s\",\"branch\":\"styles_branch__2eebS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__qqxoi\"};"],"sourceRoot":""}